package info.michalak;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Set;

import javax.persistence.AttributeOverride;			//override column name
import javax.persistence.AttributeOverrides;		//groups override
import javax.persistence.Column;					// Annotates column
import javax.persistence.ElementCollection;			// Annotate Collection object / used to transform in to table
import javax.persistence.Embedded;					//@Embeddable /@Embedded include in to table
import javax.persistence.Entity;					//Marks Entity -Object name to table
import javax.persistence.FetchType;					//LAZY* or EAGER
import javax.persistence.GeneratedValue;				//*generates auto 
import javax.persistence.GenerationType;					//Type of auto generate
import javax.persistence.Id;						//Marks primary key
import javax.persistence.JoinTable;						//*marks table , allows for join table name change 
import javax.persistence.JoinColumn;						//*marks column, allows to generate additional one  
import javax.persistence.Lob;						//Large Object over 255characters
import javax.persistence.Table;						
import javax.persistence.Temporal;					//Date Object
import javax.persistence.TemporalType;				//Date Format

import org.hibernate.annotations.CollectionId;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Type;

//Object notation
@Entity 								// Cerates entity
@Table (name="UserDetails")				// @Table marks table (name)
public class UserDetails {
	
//Automatic Id Generation	
	@Id 
	@GeneratedValue(strategy=GenerationType.IDENTITY) 		//@GeneratedValue() strategy ctrl=space 
	private int userId;										// Auto default but random dosnt work with MySQL									
															// Table (SeperateTable) https://www.youtube.com/watch?v=0wkyQHxvkLk
															// Sequence (Hibernate sequence object) 
															// IDENTITY is used by mysql not auto
	//EmbededId														
	// ID(unique key/ primary) Can be embedded object//must include @Embeddable
	// all object is used as primary key not transient
	// last 3 min https://www.youtube.com/watch?v=X8t6oYp0Uk8&list=PL4AFF701184976B25&index=11
	
	
										//@Column(name="")otherwise colum name = not transient/static field
	//@Basic()-with configuration is used
	private String userName;			//@Transient or Static or Transint notation are not send to DB

//Date Object	
	@Temporal(TemporalType.DATE) 		//@Temporal with TemporalType Provides DateFormat
	private Date joinedDate;
	
//Large Object over 255	
	@Lob								//Lob (LargeObject) more than 255in size  Auto Blob or clod byte or character 
	private Date descryption;

//Overwriting Atributes names
	@Embedded				//!!!!!!!!!!!!!!!! USE F*** object variable names instead of columns !!!!!!!!!!!!
	@AttributeOverrides({		//https://www.youtube.com/watch?v=X8t6oYp0Uk8&list=PL4AFF701184976B25&index=11
	@AttributeOverride(name="street",column=@Column(name="sadasdasd")),	
	@AttributeOverride(name="city",column=@Column(name="dsfsd")),
	@AttributeOverride(name="postcode",column=@Column(name="fffff"))})					
	private Address address;			// @Embedded - includes in the table when object is not notated @Embeddable 

// @Embedded = include in table or @Embeddable
	@Embedded                
	private Address officeAddress;
	
	 
	
	
	
	
//Lists	//https://www.youtube.com/watch?v=hofWx5_ZN9c&list=PL4AFF701184976B25&index=12 from 6min
		//!!!!!!!!!!Make Shore that object is @Embeddable!!!!!!!	
	@ElementCollection(fetch=FetchType.LAZY)	//@ElementCollection  //EAGER and LAZY -default 
		//EAGER - whole object is downloaded from DB
		//LAZY ports of object  when needed pros quicker /cons dosntt work after connection gets close
		
	@JoinTable(name ="NewPrimaryName", //  on its own changes generated by list Table name
	joinColumns= @JoinColumn(name="User_ID")// @JoinColumns= @JoinColumn(name="User_ID") changes new table primay key column name
	)
	
	private List<Address> listOfAddAddresses = new ArrayList();
	
	
	
	
	
// !!!!!!!!!!Hibernate speciffice 	 not JPA ANNOTATIONS	!!!!!!!!
//@CollectionId	 org.hibernate.annotations.CollectionId; when red underline  right click add missing attributes 
	//https://www.youtube.com/watch?v=kk207HAym_I&list=PL4AFF701184976B25&index=13 7th min

	
//	@GenericGenerator(name = "hilo-gen", strategy = "hilo") //Generates key generator
//	@CollectionId(columns = { @Column(name = "ADDRESS_ID") }, generator = "hilo", type = @Type(type="long")) 
//  private List<Address> listOfAddAddresses = new ArrayList(); //Collection this must support indexes this is ok
//@CollectionId  generates table from collection and adds "ADDRESS_ID" column as primary key + generates it using @GenericGenerator
	
	
	
	
	
	
	
	
	
	public List<Address> getListOfAddAddresses() {
		return listOfAddAddresses;
	}
	public void setListOfAddAddresses(List<Address> listOfAddAddresses) {
		this.listOfAddAddresses = listOfAddAddresses;
	}

	public Address getOfficeAddress() {
		return officeAddress;
	}
	public void setOfficeAddress(Address officeAddress) {
		this.officeAddress = officeAddress;
	}
	public Address getAddress() {
		return address;
	}
	public void setAddress(Address address) {
		this.address = address;
	}

	public Date getDescryption() {
		return descryption;
	}
	public void setDescryption(Date descryption) {
		this.descryption = descryption;
	}
				   
	
	
	
	public Date getJoinedDate() {
		return joinedDate;
	}
	public void setJoinedDate(Date joinedDate) {
		this.joinedDate = joinedDate;
	}
	public int getUserId() {
		return userId;
	}
	public String getUserName() {
		return userName;
	}
	public void setUserId(int userId) {
		this.userId = userId;
	}
	public void setUserName(String userName) {
		this.userName = userName;
	}
	

	
}
